const axios = require('axios');
const config = require('./config');

async function setupBot() {
  console.log('üîß Configurando Telegram Bot...');
  
  try {
    // Configurar comandos do bot
    const commands = [
      { command: 'start', description: 'Iniciar bot' },
      { command: 'help', description: 'Ajuda' },
      { command: 'dashboard', description: 'Ver m√©tricas do sistema' },
      { command: 'criar_tarefa', description: 'Criar nova tarefa' },
      { command: 'listar_tarefas', description: 'Ver tarefas ativas' },
      { command: 'alertas', description: 'Ver alertas ativos' },
      { command: 'relatorio', description: 'Gerar relat√≥rio' }
    ];

    const setCommandsUrl = `https://api.telegram.org/bot${config.BOT_TOKEN}/setMyCommands`;
    await axios.post(setCommandsUrl, { commands });
    
    console.log('‚úÖ Comandos configurados com sucesso!');
    
    // Obter informa√ß√µes do bot
    const botInfoUrl = `https://api.telegram.org/bot${config.BOT_TOKEN}/getMe`;
    const botInfo = await axios.get(botInfoUrl);
    
    console.log(`ü§ñ Bot: @${botInfo.data.result.username}`);
    console.log(`üì± Nome: ${botInfo.data.result.first_name}`);
    console.log(`üÜî ID: ${botInfo.data.result.id}`);
    
    // Configurar descri√ß√£o do bot
    const description = `ü§ñ Traffic Ops Bot

Sistema operacional para gest√£o de campanhas Meta Ads.

üìã Funcionalidades:
‚Ä¢ Criar e gerenciar tarefas
‚Ä¢ Ver m√©tricas em tempo real
‚Ä¢ Receber alertas autom√°ticos
‚Ä¢ Gerar relat√≥rios

üí° Digite /help para ver todos os comandos.`;
    
    const setDescriptionUrl = `https://api.telegram.org/bot${config.BOT_TOKEN}/setMyDescription`;
    await axios.post(setDescriptionUrl, { description });
    
    console.log('‚úÖ Descri√ß√£o configurada!');
    
    // Testar conex√£o com API do sistema
    try {
      const systemHealth = await axios.get(`${config.SYSTEM_API_URL.replace('/api', '')}/api/test`);
      console.log('‚úÖ Conex√£o com sistema principal: OK');
    } catch (error) {
      console.log('‚ö†Ô∏è Sistema principal n√£o est√° rodando ou n√£o acess√≠vel');
    }
    
    console.log('\nüéâ Setup conclu√≠do!');
    console.log('\nüìã Pr√≥ximos passos:');
    console.log('1. Adicione usu√°rios autorizados no arquivo .env');
    console.log('2. Execute: npm start');
    console.log('3. Teste o bot enviando /start');
    
  } catch (error) {
    console.error('‚ùå Erro no setup:', error.response?.data || error.message);
  }
}

// Executar setup
setupBot();

